{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\ReactRegistrationForm\\\\react-registration-form\\\\src\\\\components\\\\form\\\\RegistrationForm.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { USERS_API_URL } from '../../constants';\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      position: 0,\n      name: '',\n      sports: '',\n      breed: '',\n      weight: 0\n    };\n\n    this.removeReadOnlyAttribute = e => {\n      e.target.removeAttribute('readonly');\n    };\n\n    this.onChange = e => {\n      let value = e.target.type === \"number\" ? parseInt(e.target.value, 10) : e.target.value;\n      this.setState({\n        [e.target.name]: value\n      });\n    };\n\n    this.submitNew = e => {\n      e.preventDefault();\n      fetch(`${USERS_API_URL}`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          sports: this.state.sports,\n          breed: this.state.breed,\n          weight: this.state.weight\n        })\n      }).then(res => res.json()).then(user => {\n        this.props.addUserToState(user);\n        this.props.toggle();\n      }).catch(err => console.log(err));\n    };\n\n    this.submitEdit = e => {\n      e.preventDefault();\n      fetch(`${USERS_API_URL}/${this.state.id}`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          position: this.state.position,\n          name: this.state.name,\n          sports: this.state.sports,\n          breed: this.state.breed,\n          weight: this.state.weight\n        })\n      }).then(() => {\n        this.props.toggle();\n        this.props.updateUserIntoState(this.state.id);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      const {\n        id,\n        position,\n        name,\n        sports,\n        breed,\n        weight\n      } = this.props.user;\n      this.setState({\n        id,\n        position,\n        name,\n        sports,\n        breed,\n        weight\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      onSubmit: this.props.user ? this.submitEdit : this.submitNew,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          readOnly: true,\n          onFocus: this.removeReadOnlyAttribute,\n          onChange: this.onChange,\n          value: this.state.name === '' ? '' : this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"sports\",\n          children: \"Sports:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"sports\",\n          onChange: this.onChange,\n          value: this.state.sports === null ? '' : this.state.sports\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"breed\",\n          children: \"Breed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"breed\",\n          onChange: this.onChange,\n          value: this.state.breed === null ? '' : this.state.breed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"weight\",\n          children: \"Weight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"weight\",\n          onChange: this.onChange,\n          value: this.state.weight === null ? 0 : this.state.weight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        className: \"full-width\",\n        children: this.props.user ? \"Save\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["D:/Projects/ReactRegistrationForm/react-registration-form/src/components/form/RegistrationForm.js"],"names":["React","Button","Form","FormGroup","Input","Label","USERS_API_URL","RegistrationForm","Component","state","id","position","name","sports","breed","weight","removeReadOnlyAttribute","e","target","removeAttribute","onChange","value","type","parseInt","setState","submitNew","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","user","props","addUserToState","toggle","catch","err","console","log","submitEdit","updateUserIntoState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { USERS_API_URL } from '../../constants';\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        id: 0,\r\n        position: 0,\r\n        name: '',\r\n        sports: '',\r\n        breed: '',\r\n        weight: 0\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.user) {\r\n            const { id, position, name, sports, breed, weight } = this.props.user\r\n            this.setState({ id, position, name, sports, breed, weight});\r\n        }\r\n    }\r\n    removeReadOnlyAttribute= e => {\r\n        e.target.removeAttribute('readonly');\r\n    }\r\n    onChange = e => {\r\n        let value = e.target.type === \"number\" ? parseInt(e.target.value, 10) : e.target.value;\r\n        this.setState({ [e.target.name]: value })\r\n    }\r\n    submitNew = e => {\r\n        e.preventDefault();\r\n        fetch(`${USERS_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                sports: this.state.sports,\r\n                breed: this.state.breed,\r\n                weight: this.state.weight\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                this.props.addUserToState(user);\r\n                this.props.toggle();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    submitEdit = e => {\r\n        e.preventDefault();\r\n        fetch(`${USERS_API_URL}/${this.state.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.state.id,\r\n                position: this.state.position,\r\n                name: this.state.name,\r\n                sports: this.state.sports,\r\n                breed: this.state.breed,\r\n                weight: this.state.weight\r\n            })\r\n        })\r\n            .then(() => {\r\n                this.props.toggle();\r\n                this.props.updateUserIntoState(this.state.id);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return <Form autoComplete=\"off\" onSubmit={this.props.user ? this.submitEdit : this.submitNew}>\r\n            <FormGroup>\r\n                <Label for=\"name\">Name:</Label>\r\n                <Input type=\"text\" name=\"name\" readOnly onFocus={this.removeReadOnlyAttribute} onChange={this.onChange} value={this.state.name === '' ? '' : this.state.name} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"sports\">Sports:</Label>\r\n                <Input type=\"text\" name=\"sports\" onChange={this.onChange} value={this.state.sports === null ? '' : this.state.sports} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"breed\">Breed:</Label>\r\n                <Input type=\"text\" name=\"breed\" onChange={this.onChange} value={this.state.breed === null ? '' : this.state.breed} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"weight\">Weight:</Label>\r\n                <Input type=\"number\" name=\"weight\" onChange={this.onChange} value={this.state.weight === null ? 0 : this.state.weight} />\r\n            </FormGroup>\r\n            <Button color=\"info\" className=\"full-width\">{this.props.user ? \"Save\" : \"Add\"}</Button>\r\n        </Form>;\r\n    }\r\n}\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}